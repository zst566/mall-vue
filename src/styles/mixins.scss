// 导入 variables 
@use './variables.scss' as *;

// 响应式混入
@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  } @else if type-of($breakpoint) == 'number' and not unitless($breakpoint) {
    @media (min-width: $breakpoint) {
      @content;
    }
  }
}

@mixin respond-to-max($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (max-width: map-get($breakpoints, $breakpoint) - 1) {
      @content;
    }
  } @else if type-of($breakpoint) == 'number' and not unitless($breakpoint) {
    @media (max-width: $breakpoint - 1) {
      @content;
    }
  }
}

// Flex布局混入
@mixin flex($direction: row, $justify: flex-start, $align: stretch, $gap: 0) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  gap: $gap;
}

// 居中混入
@mixin center($position: absolute) {
  position: $position;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// 清除浮动
@mixin clearfix {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

// 文本截断
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// 多行文本截断
@mixin text-truncate-lines($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
}

// 阴影效果
@mixin shadow($size: sm, $color: $shadow-color) {
  $shadow-value: null;
  
  @if $size == 'xs' {
    $shadow-value: $shadow-xs;
  } @else if $size == 'sm' {
    $shadow-value: $shadow-sm;
  } @else if $size == 'base' {
    $shadow-value: $shadow-base;
  } @else if $size == 'lg' {
    $shadow-value: $shadow-lg;
  } @else if $size == 'xl' {
    $shadow-value: $shadow-xl;
  } @else {
    $shadow-value: $shadow-sm;
  }
  
  box-shadow: $shadow-value;
}

// 圆角
@mixin border-radius($radius: $border-radius-base) {
  border-radius: $radius;
}

// 边框
@mixin border($width: $border-width, $style: $border-style, $color: $border-color) {
  border: $width $style $color;
}

// 渐变背景
@mixin gradient($direction: to bottom, $start-color: #ffffff, $end-color: #f7f8fa) {
  background: linear-gradient($direction, $start-color, $end-color);
}

// 过渡效果
@mixin transition($properties: all, $duration: $transition-base, $timing: ease) {
  transition: $properties $duration $timing;
}

// 变换
@mixin transform($transform) {
  transform: $transform;
}

// 缩放
@mixin scale($scale) {
  @include transform(scale($scale));
}

// 旋转
@mixin rotate($degrees) {
  @include transform(rotate($degrees));
}

// 平移
@mixin translate($x, $y) {
  @include transform(translate($x, $y));
}

// 倾斜
@mixin skew($x, $y) {
  @include transform(skew($x, $y));
}

// 按钮样式
@mixin button-variant($bg-color, $text-color: #ffffff, $hover-bg-color: null, $hover-text-color: null) {
  background-color: $bg-color;
  color: $text-color;

  @if $hover-bg-color != null and $hover-text-color != null {
    @include transition(all, $transition-base);

    &:hover {
      background-color: $hover-bg-color;
      color: $hover-text-color;
    }

    &:active {
      @include scale(0.98);
    }
  }
}

// 卡片样式
@mixin card($bg-color: $white, $border-radius: $border-radius-lg, $shadow: true) {
  background-color: $bg-color;
  @include border-radius($border-radius);

  @if $shadow {
    @include shadow('sm');
  }

  @include transition(all, $transition-fast);

  &:hover {
    @include shadow('base');
  }
}

// 表单输入样式
@mixin form-input {
  width: 100%;
  padding: $spacing-3 $spacing-4;
  border: $border-width solid $border-color;
  @include border-radius($border-radius-base);
  @include transition(all, $transition-base);

  &:focus {
    outline: none;
    border-color: $primary;
    box-shadow: 0 0 0 2px rgba(25, 137, 250, 0.2);
  }

  &::placeholder {
    color: $gray-base;
  }
}

// 标签样式
@mixin tag($bg-color: $gray-lighter, $text-color: $gray-dark, $size: base) {
  display: inline-flex;
  align-items: center;
  padding: $spacing-1 $spacing-3;
  @include border-radius($border-radius-full);
  background-color: $bg-color;
  color: $text-color;
  font-size: $font-size-sm;
  font-weight: $font-weight-medium;

  @if $size == small {
    padding: $spacing-1 $spacing-2;
    font-size: $font-size-xs;
  } @else if $size == large {
    padding: $spacing-2 $spacing-4;
    font-size: $font-size-base;
  }

  @include transition(all, $transition-fast);

  &:hover {
    opacity: 0.8;
  }
}

// 徽章样式
@mixin badge($bg-color: $danger, $text-color: $white, $size: base) {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  min-width: $spacing-4;
  height: $spacing-4;
  padding: 0 $spacing-2;
  @include border-radius($border-radius-full);
  background-color: $bg-color;
  color: $text-color;
  font-size: $font-size-xs;
  font-weight: $font-weight-bold;

  @if $size == large {
    min-width: $spacing-6;
    height: $spacing-6;
    padding: 0 $spacing-3;
    font-size: $font-size-sm;
  }

  @include transition(all, $transition-fast);
}

// 徽标样式
@mixin badge-dot($position: top-right, $size: 8px, $color: $danger) {
  position: relative;

  &::before {
    content: '';
    position: absolute;
    width: $size;
    height: $size;
    @include border-radius(50%);
    background-color: $color;

    @if $position == top-right {
      top: -4px;
      right: -4px;
    } @else if $position == top-left {
      top: -4px;
      left: -4px;
    } @else if $position == bottom-right {
      bottom: -4px;
      right: -4px;
    } @else if $position == bottom-left {
      bottom: -4px;
      left: -4px;
    }
  }
}

// 图片响应式
@mixin responsive-image {
  max-width: 100%;
  height: auto;
  display: block;
}

// 动画效果
@mixin animation($animation, $duration: 1s, $timing: ease, $iteration: infinite, $direction: normal) {
  animation: $animation $duration $timing $iteration $direction;
}

// 淡入动画
@mixin fade-in {
  @include animation(fadeIn, 0.3s, ease-in-out);
}

// 滑入动画
@mixin slide-up {
  @include animation(slideUp, 0.3s, ease-out);
}

@mixin slide-down {
  @include animation(slideDown, 0.3s, ease-out);
}

// 旋转动画
@mixin spin {
  @include animation(rotate, 1s, linear);
}

// 脉冲动画
@mixin pulse {
  @include animation(pulse, 2s, ease-in-out, infinite);
}

// 移动端优化
@mixin mobile-optimized {
  -webkit-tap-highlight-color: transparent;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  user-select: none;
  touch-action: manipulation;
}

// 安全区域
@mixin safe-area-inset-top {
  padding-top: env(safe-area-inset-top);
}

@mixin safe-area-inset-bottom {
  padding-bottom: env(safe-area-inset-bottom);
}

@mixin safe-area-inset-left {
  padding-left: env(safe-area-inset-left);
}

@mixin safe-area-inset-right {
  padding-right: env(safe-area-inset-right);
}

// 防止文字选中
@mixin no-select {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

// 禁用文本换行
@mixin no-wrap {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

// 文字换行
@mixin wrap {
  word-wrap: break-word;
  word-break: break-all;
}

// 设备像素比适配
@mixin high-density-dpi($multiplier: 2) {
  @media (-webkit-min-device-pixel-ratio: $multiplier),
         (min-resolution: $multiplier * 96dpi) {
    @content;
  }
}

// 深色模式支持
@mixin dark-mode {
  @media (prefers-color-scheme: dark) {
    @content;
  }
}

// 横屏模式
@mixin landscape {
  @media (orientation: landscape) {
    @content;
  }
}

// 竖屏模式
@mixin portrait {
  @media (orientation: portrait) {
    @content;
  }
}

// 打印样式
@mixin print {
  @media print {
    @content;
  }
}